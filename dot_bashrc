# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
    *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=-1 #1000
HISTFILESIZE=-1 #2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
    alias rgrep='grep -r --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
    if [ -f /usr/share/bash-completion/bash_completion ]; then
        . /usr/share/bash-completion/bash_completion
    elif [ -f /etc/bash_completion ]; then
        . /etc/bash_completion
    fi
fi

# editors
export VISUAL="vim"
export EDITOR=$VISUAL

# SP
export _SP_HOST=jo15xyfy@fau
export _SP_SVN_PATH=$HOME/sp
export PATH=$_SP_SVN_PATH/bin:$PATH

# disable readline argument repetition
for i in {0..9}; do
    bind -r "\e$i"
done
unset i

# more readline settings
bind 'set completion-ignore-case on'
bind 'set completion-prefix-display-length 2'
bind 'set mark-symlinked-directories on'

# disable ctrl-s
stty -ixon

shopt -s globstar # for **

#PROMPT_COMMAND='history -a; history -n'
PROMPT_COMMAND='history -a'

# this is a function so the color codes can be local variables.
set_prompt() {
    # terminal color codes
    local DEFAULT='\[\e[m\]'
    #local BLACK='\[\e[0;30m\]'
    #local GRAY='\[\e[1;30m\]'
    local RED='\[\e[0;31m\]'
    #local LIGHTRED='\[\e[1;31m\]'
    local GREEN='\[\e[0;32m\]'
    #local LIGHTGREEN='\[\e[1;32m\]'
    local BROWN='\[\e[0;33m\]' # orange
    #local YELLOW='\[\e[1;33m\]'
    #local BLUE='\[\e[0;34m\]'
    #local LIGHTBLUE='\[\e[1;34m\]'
    #local PURPLE='\[\e[0;35m\]'
    #local PINK='\[\e[1;35m\]' # light purple
    local CYAN='\[\e[0;36m\]'
    #local LIGHTCYAN='\[\e[1;36m\]'
    #local WHITE='\[\e[1;37m\]'
    local LIGHTGRAY='\[\e[0;37m\]'

    # if this bash is in an SSH-session, display the username + hostname
    if [ -n "$SSH_CLIENT" ]; then
        local name="\u@\h "
    fi

    # if user is root, use red brackets around the time
    if [ "$(id -u)" -eq 0 ]; then
        local BRACKETCOLOR=$RED
    else
        local BRACKETCOLOR=$LIGHTGRAY
    fi

    PS1="${BRACKETCOLOR}[$BROWN\t$BRACKETCOLOR] $GREEN$name$CYAN\w$DEFAULT "

    # if this is an xterm set the title to user@host:dir
    case "$TERM" in
        xterm*|rxvt*)
            #PS1="\[\e];\u@\h: \w\a\]$PS1"
            #PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\007"'
            ;;
        *)
            ;;
    esac
}
set_prompt

# kitty shell integration
if test -n "$KITTY_INSTALLATION_DIR" -a -e "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"; then
    export KITTY_SHELL_INTEGRATION="enabled"
    source "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"
fi
