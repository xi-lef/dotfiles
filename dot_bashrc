# If not running interactively, don't do anything
case $- in
    *i*) ;;
    *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth
# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=-1
HISTFILESIZE=-1
# append to the history file, don't overwrite it
shopt -s histappend

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    eval "$(dircolors -b)"
    alias ls='ls --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
    alias rgrep='grep -r --color=auto'
fi

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# editors
export VISUAL="vim"
export EDITOR=$VISUAL

# disable readline argument repetition
for i in {0..9}; do
    bind -r "\e$i"
done
unset i
# more readline settings
bind 'set completion-ignore-case on'
bind 'set completion-prefix-display-length 2'
bind 'set mark-symlinked-directories on'

# disable ctrl-s
stty -ixon

PROMPT_COMMAND='history -a'

# this is a function so the color codes can be local variables.
set_prompt() {
    # terminal color codes
    local DEFAULT='\[\e[m\]'
    local RED='\[\e[0;31m\]'
    local GREEN='\[\e[0;32m\]'
    local BROWN='\[\e[0;33m\]' # orange
    local CYAN='\[\e[0;36m\]'
    local LIGHTGRAY='\[\e[0;37m\]'

    # if this bash is in an SSH-session, display the username + hostname
    if [ -n "$SSH_CLIENT" ]; then
        local name="\u@\h "
    fi

    # if user is root, use red brackets around the time
    if [ "$(id -u)" -eq 0 ]; then
        local BRACKETCOLOR=$RED
    else
        local BRACKETCOLOR=$LIGHTGRAY
    fi

    PS1="${BRACKETCOLOR}[$BROWN\t$BRACKETCOLOR] $GREEN$name$CYAN\w$DEFAULT "

    # if this is an xterm set the title to user@host: dir
    case "$TERM" in
        xterm*|rxvt*)
            PS1="\[\e]\u@\h: \w\a\]$PS1"
            ;;
    esac
}
set_prompt

# kitty shell integration
if test -n "$KITTY_INSTALLATION_DIR"; then
    export KITTY_SHELL_INTEGRATION="enabled"
    source "$KITTY_INSTALLATION_DIR/shell-integration/bash/kitty.bash"
fi
