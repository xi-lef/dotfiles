# vim: fdm=marker tw=99 et
global !p
# Return the task and subtask. Examples: ('wsort', None), ('clash', 'plist.c'), (None, None)
def get_task():
    w = vim.current.window
    task = subtask = None
    for l in reversed(w.buffer[: w.cursor[0] - 1]):
        if l == '# }}}' and not subtask:
            break
        if l.startswith('#') and l.endswith('{{{'):
            n = l.split()[1]
            if n.endswith('.c'):
                if not subtask:
                    subtask = n
            else:
                task = n
                break
    return task, subtask

# Return a string suiting the task-specific functions for the C-snippets.
def get_taskstr():
    task, subtask = get_task()
    subtask = f"'{subtask}'" if subtask else ''
    return f"{task}({subtask})"

# Return 'c' for C-snippets and 'm' for make-snippets.
def get_filetype():
    return 'c' if fn.startswith('c_') else 'm'
endglobal

context "get_task()[0] in ('General', None)"
snippet snip "Snippet for SP (general)" b
context "`!p snip.rv = get_filetype()`()"
snippet ${1:trigger} "${2:desc}"
$0
`echo endsnippet`
endsnippet

context "get_task()[0]"
snippet snip "Snippet for SP (task-specific)" b
context "`!p snip.rv = get_filetype()`() and `!p snip.rv = get_taskstr()`"
snippet `!p snip.rv = get_task()[0]`_${2:trigger} "${3:desc}"
$0
`echo endsnippet`
endsnippet
